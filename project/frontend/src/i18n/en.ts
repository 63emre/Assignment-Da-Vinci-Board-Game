import { Translations } from './index';

export const en: Translations = {
  nav: {
    home: 'Home',
    users: 'Users',
    posts: 'Posts',
    language: 'Language',
  },
  home: {
    title: 'Welcome to Assignment',
    subtitle: 'Full Stack Application with Modern Technologies',
    description: 'A complete full-stack web application built with React 19 + TypeScript frontend and NestJS + TypeScript backend, featuring comprehensive CRUD operations for users and posts.',
    features: {
      title: 'Key Features',
      userManagement: {
        title: 'User Management',
        description: 'Complete CRUD operations for user management with form validation and real-time updates.',
      },
      postManagement: {
        title: 'Post Management',
        description: 'Full post management system with user relationships and content management capabilities.',
      },
      realTime: {
        title: 'Real-time Operations',
        description: 'Instant feedback and updates for all operations with loading states and error handling.',
      },
      responsive: {
        title: 'Responsive Design',
        description: 'Mobile-first design that works perfectly on desktop, tablet, and mobile devices.',
      },
    },
    getStarted: 'Get Started',
    apiDocs: 'API Documentation',
    techStack: {
      title: 'Tech Stack',
      frontend: 'Frontend: React 19, TypeScript, Vite, React Router',
      backend: 'Backend: NestJS, TypeScript, Swagger, Express',
    },
  },
  users: {
    title: 'User Management',
    addUser: 'Add New User',
    editUser: 'Edit User',
    deleteUser: 'Delete User',
    confirmDelete: 'Are you sure you want to delete this user? This action cannot be undone.',
    noUsers: 'No users found. Add your first user to get started.',
    viewPosts: 'View Posts',
    form: {
      name: 'Full Name',
      username: 'Username',
      email: 'Email Address',
      phone: 'Phone Number',
      website: 'Website',
      nameRequired: 'Full name is required',
      usernameRequired: 'Username is required',
      emailRequired: 'Email address is required',
      emailInvalid: 'Please enter a valid email address',
    },
  },
  posts: {
    title: 'Post Management',
    addPost: 'Add New Post',
    editPost: 'Edit Post',
    deletePost: 'Delete Post',
    confirmDelete: 'Are you sure you want to delete this post? This action cannot be undone.',
    noPosts: 'No posts found. Create your first post to get started.',
    byUser: 'Posts by',
    allPosts: 'All Posts',
    form: {
      title: 'Post Title',
      body: 'Post Content',
      user: 'Author',
      titleRequired: 'Post title is required',
      userRequired: 'Please select an author',
      selectUser: 'Select an author',
    },
  },
  common: {
    save: 'Save',
    cancel: 'Cancel',
    edit: 'Edit',
    delete: 'Delete',
    close: 'Close',
    loading: 'Loading...',
    error: 'Error',
    success: 'Success',
    confirm: 'Confirm',
    yes: 'Yes',
    no: 'No',
    search: 'Search',
    filter: 'Filter',
    actions: 'Actions',
    retry: 'Retry',
  },
  messages: {
    userCreated: 'User created successfully!',
    userUpdated: 'User updated successfully!',
    userDeleted: 'User deleted successfully!',
    postCreated: 'Post created successfully!',
    postUpdated: 'Post updated successfully!',
    postDeleted: 'Post deleted successfully!',
    errorOccurred: 'An error occurred. Please try again.',
    networkError: 'Network error. Please check your connection.',
    validationError: 'Please check the form for errors.',
  },
};
